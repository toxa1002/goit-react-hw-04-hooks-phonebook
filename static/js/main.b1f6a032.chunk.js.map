{"version":3,"sources":["components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","App.js","index.js","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css"],"names":["ContactsList","renderContacts","deleteContact","className","s","list","map","el","item","span","name","number","btn","type","id","onClick","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","form","preventDefault","placeholder","onChange","pattern","buttonForm","Filter","filter","App","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","newItem","nanoid","some","alert","prevContacts","toLowerCaseFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b1f6a032.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\n\nconst ContactsList = ({ renderContacts, deleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {renderContacts.map(el => {\n        return (\n          <li className={s.item} key={el.id}>\n            <span className={s.span}>\n              {el.name}: {el.number}\n            </span>\n            <button\n              className={s.btn}\n              type=\"button\"\n              id={el.id}\n              onClick={() => {\n                deleteContact(el.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  renderContacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const handleChange = e => {\n    if (e.currentTarget.name === 'name') setName(e.currentTarget.value);\n    if (e.currentTarget.name === 'number') setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({\n      name: name,\n      number: number,\n    });\n    setName('');\n    setNumber('');\n  };\n        return (\n            <form className={s.form} onSubmit={handleSubmit}>\n                <h3>Name</h3>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={handleChange}\n                ></input>\n\n                <h3>Number</h3>\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    placeholder=\"123-45-67\"\n                    value={number}\n                    onChange={handleChange}\n                ></input>\n                <button className={s.buttonForm} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n\n}\n\nexport default ContactForm;","import React from 'react';\nconst Filter = ({ filter, onChange }) => {\n    return (\n        <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            placeholder=\"Search by contacts\"\n             onChange={onChange}\n        />\n    );\n};\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport ContactsList from './components/ContactsList';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\n\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n  );\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n};\r\n\r\nfunction App() {\r\n  const [filter, setFilter] = useState('');\r\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\r\n\r\n  const formSubmitData = ({ name, number }) => {\r\n    const newItem = { id: nanoid(), name: name, number: number };\r\n    let isUnique = contacts.some(el => el.name === name);\r\n    if (!isUnique) {\r\n      setContacts(prevContacts => {\r\n        return [...prevContacts, newItem];\r\n      });\r\n    } else {\r\n      alert(`${name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const renderContacts = () => {\r\n    const toLowerCaseFilter = filter.toLowerCase();\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(toLowerCaseFilter),\r\n    );\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    setContacts(prevContacts => {\r\n      return prevContacts.filter(el => el.id !== id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <h1 className=\"title\">Phonebook</h1>\r\n      <ContactForm onSubmit={formSubmitData} />\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactsList\r\n        renderContacts={renderContacts()}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"ContactsList_buttonDelete__1tEBz\",\"listItem\":\"ContactsList_listItem__3JLN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3SC6G\",\"buttonForm\":\"ContactForm_buttonForm__-kkVn\"};"],"sourceRoot":""}